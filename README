What is nettoolbox-ng?
====================

nettoolbox-ng is a set of network tools for Linux.

It contains libnetcore-ng which is a library of networking feature such as
	- Zero-Copy RX/TX ring
	- Multithreaded RX/TX tasks
	- RX/TX compatibility mode
	- PCAP support (w/o using libpcap)
	- BPF support
	- Packet dissection
	- Network interface control

What is netsniff-ng?
====================
netsniff-ng is a tool based on libnetcore-ng which is like tcpdump,
but without the need to perform system calls for fetching network packets.
A memory-mapped area within kernelspace will be used for accessing packets,
thus there is no need to perform a hard-copy to get them to userspace ('zero-copy'
mechanism).
The whole tool set is libpcap independent, but nevertheless supports the
pcap file format for capturing, replaying and performing offline-analysis of pcap dump files.
Furthermore we are focussing on building a robust, clean and secure analyzer and utilities that
complete netsniff-ng as a support for penetration testing.

netsniff-ng can be used for protocol analysis, reverse engineering and
network debugging. 

Some use cases and features
===========================

* Open source project and free licensing
* Analyzing and debugging of network problems or protocol implementations
* Reverse engineering of (proprietary) network protocols
* Dumping, replaying and offline analysis of pcap traces
* Integrated high performance capabilities
* Focus on usability, robustness, security and functionality
* Support utility for penetration testing

What are the main goals?
========================

netsniff-ng's main goal is to be a high performance network sniffer that
focuses on usability, robustness and functionality. Its aim is to support
the daily work for networking engineers, developers, admins or Linux
users by providing support with or in network monitoring, protocol
analysis, reverse engineering, network debugging and penetration testing.

Getting started?
========================

nettoolbox-ng only depends on pthread and cmake.

To build the project, you need to follow the steps:
 - mkdir build
 - cd build
 - cmake ..
 - make

To build with the project with debug information suitable for GDB invoke:
 - cmake -DCMAKE_BUILD_TYPE=debug ..

To run the test cases run "make test" after building the project.

The command "make doc" will compile the project's documentation if Doxygen is installed.

Homepage
========

You can reach us via http://www.netsniff-ng.org/.

Installation
============

For installation instructions, have a look at INSTALL.

Development
===========

There's a public Git repository at http://github.com/eroullit/nettoolbox-ng
where you can check out the latest code base.

git clone git://github.com/eroullit/nettoolbox-ng.git

Note that there is also a HACKING and TODO file for further readings. Next to 
this we've set up a FAQ page with development questions at 
http://netsniff-ng.org/faq.html.

Our coding conventions can be found in CODING.

Contact
=======

For questions:
    <workgroup@netsniff-ng.org>,
    <netsniff-ng@googlegroups.com>,
    http://netsniff-ng.org/faq.html
    #netsniff-ng on freenode.org

For bugs:
    <bugs@netsniff-ng.org>,

For improvements, hacks and all the rest:
    <workgroup@netsniff-ng.org>

Website:
    http://www.netsniff-ng.org/

IRC:
    #netsniff-ng on freenode.org

Hosted on and associated with:
    http://www.gnumaniacs.org/

